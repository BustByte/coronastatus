<%
  const {
    profile,
    passcode,
    baseUrl,
    formatNumber,
    urls,
    countries
  } = locals;
  const shouldAddAnalytics = !locals.profile;
%>
<% const { show = true, menu = true, home = false, fullscreen = false, lastCommit = false, showLocaleSelector = true } = locals; %>

<!DOCTYPE html>
<html lang="<%= locale %>">
<!-- <% if (lastCommit) { %>Current commit: https://github.com/BustByte/coronastatus/commits/<%= lastCommit %><% } else { %>Get our code here: https://github.com/BustByte/coronastatus<% } %>  -->
<head>
<%- include('partials/head') -%>
<style>
  body {
    background-color: #222222;
  }

  .background-slate {
    background-image: none;
    background-color: #222222;
  }

  #map {
    height: 60vh;
    width:100%;
    display: block;
    position:relative;
    top:-5%;
    bottom:10%;
    left:0;
    right:0;
  }

  .country-button {
    background-repeat: no-repeat;
    background-position: center;
    background-size: cover;
    text-shadow: -1px 0 black, 0 1px black, 1px 0 black, 0 -1px black;
  }

  .group:hover .group-hover\:block {
    display: block !important;
  }

  .flag {
    width:5vw;
    height:5vh;
  }

  .marker {
    background-image: url('static/images/logo-marker.png');
    background-size: cover;
    width: 50px;
    height: 50px;
    border-radius: 50%;
    cursor: pointer;
  }

  .mapboxgl-popup {
    max-width: 200px;
  }

  .mapboxgl-popup-content {
    text-align: center;
  }


</style>
<script
  src="https://api.mapbox.com/mapbox-gl-js/v1.8.1/mapbox-gl.js"
  integrity="sha384-gUVjgBN2k0xDStRTBb1n9XCongQ8l5gP+wxXs1TkpusVUVFtlRFLvP88bu5wsBUp"
  crossorigin="anonymous"
></script>

<link
  href="https://api.mapbox.com/mapbox-gl-js/v1.8.1/mapbox-gl.css"
  rel="stylesheet"
/>
</head>
<body class="flex flex-col">

  <div class="main-container flex flex-col flex-grow">

  <% if (menu) { %>
    <section class="background-slate custom-section custom-hero p-4 w-full <% if (fullscreen) { %>custom-fullscreen<% } %>">
      <div class="custom-section-content <% if (fullscreen) { %>mx-4<% } else { %>mx-auto<% } %>">
        <header class="py-2 flex justify-between items-center flex-wrap">
          <div class="flex items-center">
            <%- include('partials/logo') -%>
            <% if (showLocaleSelector) { %>
              <%- include('partials/locale-selector') -%>
            <% } %>
          </div>
          <ul class="mt-4 text-center">
            <li class="group">
              <button class="group inverse custom-nav-link rounded-full text-base text-white mt-2 font-medium px-5 " >
                <span class="firstlevel"><%= __("Contribute now! ") %>üåç</span>
              </button>

              <ul id="country-links-container" class="absolute p-2 rounded-lg shadow-lg bg-white z-10 hidden group-hover:block">
                <svg class="block fill-current text-white w-4 h-4 ml-3 -mt-3 z-0" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z"></path></svg>
              
            </ul>
            </li>
          </ul>
        </header>
      </div>
    </section>
  <% } %>


  <section class="custom-section custom-hero p-4 background-slate">
  <div class="text-center mx-auto">
    <h1
      class="my-4 text-2xl md:text-3xl lg:text-4xl lg:mx-20 font-medium text-cvs-green-light leading-tight"
    >
      <%- __("Help us <span>uncover</span> and <span>predict</span> the corona spread across the world").replace(/<span>/g, '<span class="text-cvs-gold">') %>
    </h1>
  
  </div>
  </section>
  


  <section class="custom-section custom-hero background-slate">

  
    <div id="map"></div>

  </section>




  <section class="custom-section custom-hero p-4 background-slate">

    <ul class="mt-4 text-center">
      <li>
        <button class="inverse custom-nav-link rounded-full text-base text-white mt-2 font-medium px-5 " >
          <%- __("How can I contribute?").replace(/<span>/g, '<span class="text-cvs-gold">') %>
        </button>
      </li>
    </ul>


    <div class=" flex flex-row justify-around m-8" >
      <div class="text-center flex flex-col items-center w-1/2 md:w-1/4 p-4 mt-8">
        <h1 class="text-cvs-gold m-2">1. Survey</h1>
        <p class="text-white">Select your *country and fill out the anonymous survey.</p>
      </div>
      <div class="text-center flex flex-col items-center w-1/2 md:w-1/4 p-4 mt-8">
        <h1 class="text-cvs-gold m-2">2. Share</h1>
        <p class="text-white">Share the link with your friends, family, and encourage them to fill it in.</p>
      </div>
    </div>


    <div class="custom-section-content mx-auto">

      <div class="my-8 flex flex-row flex-wrap justify-between">
        
  
        <%- include('partials/app-feature-block', {
          image: '/static/images/hospital.svg',
          title: __('Unreported cases'),
          description: __('The spread of COVID-19 in our world is unknown. Help us create a better overview.')
        }) -%>
  
        <%- include('partials/app-feature-block', {
          image: '/static/images/doctor.svg',
          title: __('Contribute anonymously'),
          description: __('Report your health condition anonymously')
        }) -%>
  
        <%- include('partials/app-feature-block', {
          image: '/static/images/research.svg',
          title: __('Insight for everyone'),
          description: __('The data is open to everyone. Look at maps and graphs, or download the data and create your own visualizations.')
        }) -%>
  
        <%- include('partials/app-feature-block', {
          image: '/static/images/mobile.svg',
          title: __('Everything is open'),
          description: __('The website is open source and built by volunteers. Feel free to join.')
        }) -%>
      </div>
    </div> 
    <ul class="mt-4 text-center">
      <li>
        <button class="inverse custom-nav-link rounded-full text-base text-white mt-2 font-medium px-5 " >
          <%- __("About corona<span>status</span>").replace(/<span>/g, '<span class="text-cvs-gold">') %>
        </button>
      </li>
    </ul>

  </section>


  <footer class="custom-section custom-section-footer p-8 pt-32">
    <div
      class="custom-section-content mx-auto custom-section-footer-content flex flex-col items-center"
    >
      <a
        href="https://github.com/BustByte/coronastatus"
        target="_blank"
        class="footer-logo-link m-6"
      >
        <img
          src="/static/images/github.svg"
          alt=""
          class="footer-logo-link__img mt-12 h-12 w-12 lg:h-16 lg:w-16"
        />
      </a>
      <div
        class="flex flex-row justify-between flex-wrap items-center self-stretch mt-8 text-base lg:text-xl text-center"
      >
        <% if (locals.twitter) { %>
        <a
          class="text-white font-medium whitespace-no-wrap"
          href="https://twitter.com/intent/user?screen_name=<%= locals.twitter %>"
          target="_blank"
          >@<%= locals.twitter %></a
        >
        <% } %>
        <span
          class="text-white font-medium text-left md:text-center md:whitespace-no-wrap"
        >
          <%= __('Developed by')%>
          <a target="_blank" class="font-bold hover:text-cvs-red hover:underline" href="https://bustbyte.no"
            ><%= __('BustByte AS')%></a
          >
          <%= __('and') %>
          <a class="font-bold hover:text-cvs-red hover:underline" href="<%= urls.contributors %>">
            <%= __('volunteers')%>
          </a>
        </span>
        <a
          class="text-white hover:text-cvs-red font-bold hover:underline whitespace-no-wrap"
          href="<%= urls.privacyPolicy %>"
          ><%= __('Privacy Policy')%></a
        >
      </div>

      <div
        class="flex items-center justify-center self-stretch mt-4 mb-8 text-sm lg:text-base text-center"
      >
        <img src="/static/images/analytics.svg" alt="Provided by Simple Analytics" class="mr-2" />
          <a target="_blank" class="font-bold text-white hover:text-cvs-red hover:underline" href="https://simpleanalytics.com/<%= baseUrl %><% if (!shouldAddAnalytics) { %>?ref=<%= baseUrl %><% } %>"
          ><%= __('View Website Statistics')%></a
        >
      </div>

    </div>
  </footer>




<script>
  function hasSubmittedAlertOnClick() {
      document.getElementById('has-submitted-alert').style.display = 'none';
      window.localStorage.setItem("hasCrossedOutInfo", "true");
  }

  if ((window.localStorage.getItem("hasSubmittedProfile") === "true"
      || window.localStorage.getItem("isUsingPasscodeLink") === "true")
      && window.localStorage.getItem("hasCrossedOutInfo") !== "true"
      && window.location.pathname.indexOf("helsetilstand") === -1) {
      document.getElementById('has-submitted-alert').style.display = 'flex';
  }

  var symptoms = document.querySelectorAll('input[name^="symptom-"]:checked');
  if (symptoms != null && symptoms.length > 0) {
    document.getElementById('symptom-start-question').style.display = 'block';
  }

  changeTestResultDisplay(document.getElementById("been-tested-yes").checked);

  var hasPasscodeCookie = document.cookie.includes('passcode');
  document.getElementById('accept-remember').checked = hasPasscodeCookie;
</script>

<script>
  (function scrollCallToAction() {
    document.querySelectorAll('[href="#contribute"]').forEach(function(element) {
      element.addEventListener("click", function(event) {
        event.preventDefault();
        document.getElementById("contribute").scrollIntoView({ behavior: "smooth" });
      });
    });
  })()
</script>

<script>
  // Obfuscate path so people will not share their personal URL
  var obfuscatePath = true;
</script>

<script
  src="https://cdnjs.cloudflare.com/ajax/libs/d3/5.15.0/d3.min.js"
  integrity="sha384-gWG9VgK097eQTR3sCV4vOFl+vCZUZpKoV6cidldSSoI/ThCG5Yvl0EBknaGZsd5L"
  crossorigin="anonymous"
></script>
<script>
  var map = new mapboxgl.Map({
    container: 'map',
    style: 'https://tiles.stadiamaps.com/styles/alidade_smooth_dark.json',
    center: [<%= locals.mapCenter %>],
    zoom: 3,
    maxZoom: 4,
    customAttribution: 'Postal Codes <a href="https://geonames.org/" target="_blank">&copy;GeoNames</a>',
    hash: true,
    scrollZoom      : false,
    boxZoom         : false,
    doubleClickZoom : false
  });


  map.on('load', function() {
    




   /*  map.addSource('reports', {
      type: 'geojson',
      data: '<%= urls.map %>/geojson',
      cluster: true,
      clusterMaxZoom: 100, // Max zoom to cluster points on
      clusterRadius: 80,
      clusterProperties: {
        positive: ['+', ['case', positive, 1, 0]],
        symptoms: ['+', ['case', symptoms, 1, 0]],
        healthy: ['+', ['case', healthy, 1, 0]]
      }
    });

    map.addLayer({ 
      id: 'report_individual',
      type: 'circle',
      source: 'reports',
      filter: ['!=', ['get', 'cluster'], true],
      paint: {
        'circle-color': [
          'case',
          positive,
          colors.positive,
          symptoms,
          colors.symptoms,
          healthy,
          colors.healthy,
          '#000000'
        ],
        'circle-radius': 12
      }
    });*/
  });

  var markers = {};
  var markersOnScreen = {};

  function updateMarkers() {
    var newMarkers = {};
    var features = map.querySourceFeatures('reports');
    totals = getPointCount(features);
    features.forEach(function(feature) {
      var coordinates = feature.geometry.coordinates;
      var props = feature.properties;
      if (!props.cluster) {
        return;
      }
      var id = props.cluster_id;
      var marker = markers[id];
      if (!marker) {
        marker = markers[id] = new mapboxgl.Marker({
          element: el
        }).setLngLat(coordinates);
      }

      newMarkers[id] = marker;

      if (!markersOnScreen[id]) {
        marker.addTo(map);
      }
    });

    for (id in markersOnScreen) {
      if (!newMarkers[id]) {
        markersOnScreen[id].remove();
      }
    }
    markersOnScreen = newMarkers;
  }

  
  map.on('data', function(e) {
    if (e.sourceId !== 'reports' || !e.isSourceLoaded) return;

    map.on('move', updateMarkers);
    map.on('moveend', updateMarkers);
    updateMarkers();
  });


  navigator.geolocation.getCurrentPosition(function(geolocation) {
    map.flyTo({
      zoom: 4,
      center: [geolocation.coords.longitude, geolocation.coords.latitude],
      essential: true
    });
  });

  var countries = <%- JSON.stringify(locals.countries) %>;
  var geojson = {
  type: 'FeatureCollection',
  features: []
  };
</script>


<script>
  function createCountryButton(key, container) {
    var li = document.createElement("li");
      li.classList.add("p-4");
      li.classList.add("whitespace-no-wrap");
      li.classList.add("m-2");
      li.classList.add("md:text-base");
      li.classList.add("text-sm");
      li.classList.add("text-gray-600");
      li.classList.add("hover:text-gray-800");
      li.classList.add("hover:bg-gray-100");
      li.id = key+"-item";

      var a = document.createElement("a");
      a.classList.add("px-2");
      a.classList.add("py-1");
      a.href = countries[key].domain;

      var span = document.createElement("span");
      span.innerText = countries[key].name;
      a.appendChild(span);

      li.style.backgroundImage = "url(static/flags/1x1/"+key+".svg)";
      li.style.backgroundRepeat = "no-repeat";

      li.append(a);
      container.appendChild(li);
  }

  function createMarkerObject(key) {
    geojson.features.push({
      type: 'Feature',
      geometry: {
        type: 'Point',
        coordinates: [countries[key].center[1], countries[key].center[0]]
      },
      properties: {
        title: countries[key].name,
        domain: countries[key].domain
      }
    });
  }

  function plotMarker(marker) {
    geojson.features.forEach(function(marker) {
      var el = document.createElement('div');
      el.className = 'marker';
      new mapboxgl.Marker(el)
      .setLngLat(marker.geometry.coordinates)

  .setPopup(new mapboxgl.Popup({ offset: 25 }) // add popups
    .setHTML('<h3 class="p-5"><a href="' + marker.properties.domain + '">' + marker.properties.title + '</a></h3>'))
    .addTo(map);
    
    });
  }
  
  function processCountriesJson () {
    var container = document.getElementById("country-links-container");
    Object.keys(countries).forEach(function(key){
      createCountryButton(key, container);
      createMarkerObject(key);
      plotMarker(geojson.features[geojson.features.length - 1]);
    });
  }
  processCountriesJson();
   
</script>